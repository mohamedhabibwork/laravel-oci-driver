name: CI

on:
  push:
    branches: [main, develop]
    paths:
      - "**.php"
      - ".github/workflows/ci.yml"
      - "phpunit.xml.dist"
      - "composer.json"
      - "composer.lock"
  pull_request:
    paths:
      - "**.php"
      - ".github/workflows/ci.yml"
      - "phpunit.xml.dist"
      - "composer.json"
      - "composer.lock"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: ["8.2", "8.3"]
        laravel: ["11.*", "12.*"]
        stability: [prefer-stable]
        include:
          - laravel: "10.*"
            testbench: "10.*"
          - laravel: "11.*"
            testbench: "10.*"
          - laravel: "12.*"
            testbench: "10.*"
        exclude:
          # Exclude PHP 8.3 with Laravel 12.* if not compatible
          - php: "8.3"
            laravel: "12.*"

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, redis
          coverage: xdebug
          tools: composer:v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php }}-
            ${{ runner.os }}-composer-

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      - name: Create build directory
        run: mkdir -p build/logs

      - name: List Installed Dependencies
        run: composer show -D

      - name: Prepare Laravel Application
        run: |
          vendor/bin/testbench package:discover --ansi

      - name: Execute tests
        run: |
          vendor/bin/pest --coverage-clover=build/logs/clover.xml --log-junit=build/logs/junit.xml --coverage-html=build/coverage --ci
        env:
          XDEBUG_MODE: coverage

      - name: Upload test results to Codecov
        if: success() && github.actor != 'dependabot[bot]'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/logs/clover.xml
          fail_ci_if_error: false
          verbose: true

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.php }}-${{ matrix.laravel }}
          path: |
            build/logs/
            build/coverage/
          retention-days: 3

  minimum-version-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: Minimum Version Test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none
          tools: composer:v2

      - name: Install minimum dependencies
        run: |
          composer update --prefer-lowest --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/pest --ci
